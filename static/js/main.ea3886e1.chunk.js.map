{"version":3,"sources":["components/Form/Form.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/Container/Container.js","components/Section/Section.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","section","Form","onFormSubmit","useState","name","setName","number","setNumber","pattern","handleInputChange","evt","target","value","Error","resetForm","makeFieldClass","type","field","str","testRegExp","RegExp","test","isStringValid","invalid","join","autoComplete","form","onSubmit","preventDefault","htmlFor","label","onChange","title","required","submit","Filter","onSearch","filterContainer","filter","ContactListItem","id","onDelete","contactListItem","contactMeta","button","onClick","ContactList","contacts","length","contactList","map","notification","App","JSON","parse","window","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","some","contact","toLowerCase","alert","newContact","uuidv4","trim","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea3886e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3wq5g\",\"field\":\"Form_field__3w5vs\",\"invalid\":\"Form_invalid__3qgqB\",\"label\":\"Form_label__3wqV5\",\"submit\":\"Form_submit__2BdSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__26nad\",\"number\":\"ContactListItem_number__1d21Z\",\"button\":\"ContactListItem_button__2XLVo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2F7GW\",\"filter\":\"Filter_filter__1zKx5\",\"label\":\"Filter_label__e-4ZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1Vc3a\",\"notification\":\"ContactList_notification__2aMb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1wprQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3D_eM\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = function ({ children }) {\n  return <div className={styles.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nimport Container from '../Container/Container';\n\nconst Section = function ({ children }) {\n  return (\n    <section className={styles.section}>\n      <Container>{children}</Container>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Form.module.css';\n\nconst Form = ({ onFormSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const pattern = {\n    name: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    number:\n      '^\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}$',\n  };\n\n  const isStringValid = (str, pattern) => {\n    const testRegExp = new RegExp(pattern);\n\n    return str === '' || testRegExp.test(str);\n  };\n\n  const handleInputChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        throw new Error('Wrong Input field name invoked!');\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    onFormSubmit(name, number);\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const makeFieldClass = (value, type) => {\n    return [\n      styles.field,\n      ...(isStringValid(value, pattern[type]) ? [] : [styles.invalid]),\n    ].join(' ');\n  };\n\n  return (\n    <form autoComplete=\"off\" className={styles.form} onSubmit={handleSubmit}>\n      <label htmlFor=\"name\" className={styles.label}>\n        Name\n      </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        className={makeFieldClass(name, 'name')}\n        onChange={handleInputChange}\n        pattern={pattern.name}\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n\n      <label htmlFor=\"number\" className={styles.label}>\n        Number\n      </label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        className={makeFieldClass(number, 'number')}\n        onChange={handleInputChange}\n        pattern={pattern.number}\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n      />\n\n      <button type=\"submit\" className={styles.submit}>\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nfunction Filter({ value, onSearch }) {\n  return (\n    <div className={styles.filterContainer}>\n      <label htmlFor=\"name\" className={styles.label}>\n        Find contacts by name\n      </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className={styles.filter}\n        value={value}\n        onChange={onSearch}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nfunction ContactListItem({ id, name, number, onDelete }) {\n  return (\n    <li className={styles.contactListItem}>\n      <p className={styles.contactMeta}>\n        {name}: <span className={styles.number}>{number}</span>\n      </p>\n      <button\n        type=\"button\"\n        className={styles.button}\n        onClick={() => onDelete(id)}\n      ></button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import ContactListItem from '../ContactListItem/ContactListItem';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDelete }) {\n  return contacts.length ? (\n    <ul className={styles.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDelete={onDelete}\n        />\n      ))}\n    </ul>\n  ) : (\n    <p className={styles.notification}>No contact found</p>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default ContactList;\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Section from './components/Section/Section';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nconst App = () => {\n  const [contacts, setContacts] = useState(\n    () => JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  );\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    setContacts(contacts => [...contacts, newContact]);\n  };\n\n  const deleteContact = id => {\n    setContacts(contacts => contacts.filter(contact => contact.id !== id));\n  };\n\n  const handleFilterChange = evt => {\n    const filter = evt.target.value.trim();\n\n    setFilter(filter);\n  };\n\n  const getFilteredContacts = () =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n\n  return (\n    <>\n      <Section>\n        <h1>Phonebook</h1>\n        <Form onFormSubmit={addContact} />\n      </Section>\n\n      <Section>\n        <h2>Contacts</h2>\n\n        {contacts.length ? (\n          <>\n            <Filter onSearch={handleFilterChange} />\n            <ContactList\n              contacts={getFilteredContacts()}\n              onDelete={deleteContact}\n            />\n          </>\n        ) : (\n          <p>Phonebook is empty</p>\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}